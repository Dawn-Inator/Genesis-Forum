version: "3.7"
services:

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=Password_123456
      - MYSQL_DATABASE=forum
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=Password_123456
    ports:
      - "3306:3306"
    volumes:
      - "./docker/mysql/conf.d:/etc/mysql/conf.d"
      - "./docker/mysql/data:/var/lib/mysql"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - "./docker/redis/data:/data"
    command: redis-server --appendonly yes

  elasticsearch:
    build:
      context: . 
      dockerfile: Dockerfile.elasticsearch
    user: "1000:1000"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "./docker/elasticsearch/data:/usr/share/elasticsearch/data"

  flask-api:
    build:
      context: .   
      dockerfile: Dockerfile.flask  
    image: flask-api:1.0.0   # 指定构建完成的镜像名和标签
    environment:
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=elasticsearch:9200
      - DATABASE_URL=mysql+pymysql://testuser:Password_123456@mysql:3306/forum
    ports:
      - "5000:5000"

  rq-worker:
    image: flask-api:1.0.0
    environment:
      - DATABASE_URL=mysql+pymysql://testuser:Password_123456@mysql/forum
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=elasticsearch:9200
    entrypoint: rq
    command: worker -u redis://redis:6379/0 flask-tasks

  nginx:
    build:
      context: . 
      dockerfile: Dockerfile.nginx
    image: nginx-vuejs
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - "./docker/nginx/data:/usr/share/nginx/html"

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./docker/nginx-proxy-manager/data:/data
      - ./docker/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
